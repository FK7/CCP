smbclient //SS-JHQ-DTDA-1.sabiccorp.sabic.com/25_PE_PK_OLE1_Interpolated -U 'SABICCORP\khanffaa' -c "lcd /data/07/PK_OLF1_Interpolated; prompt; mget *.csv; exit;" --debuglevel=10

smbclient //SS-JHQ-DTDA-1.sabiccorp.sabic.com/27_PE_PK_OLE2_Interpolated -U 'SABICCORP\khanffaa' -c "lcd /data/07/PK-OLF-2-Furnace-10; prompt; mget *.csv; exit;"


smbclient //SS-JHQ-DTDA-1.sabiccorp.sabic.com/28_PE_PK_OLE1_Interpolated -U 'SABICCORP\khanffaa' -c "lcd /data/07/28_PE_PK_OLE1_Interpolated; prompt; mget *.csv; exit;"

smbclient //SS-JHQ-DTDA-1.sabiccorp.sabic.com/26_PK_OLF1_Interpolated_1min -U 'SABICCORP\khanffaa' -c "lcd /data/07/26_PK_OLF1_Interpolated_1min_all; prompt; mget *.csv; exit;"


smbclient //SS-JHD-DTDA-2.sabiccorp.sabic.com/2_PK_OLF2_Interpolated_1min -U 'SABICCORP\khanffaa' -c "lcd /data/07/2_PK_OLF2_Interpolated_1min; prompt; mget *.csv; exit;"

PK_OLF1_2015-04-20



/.
1. Make sure all prerequisites is configured.

2. Install httpd - sudo yum install -y httpd wget.

3. Install Mysql and Oracle Java 8- 
	wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm
	sudo rpm -ivh mysql-community-release-el7-5.noarch.rpm
	sudo yum -y update
	sudo yum install –y mysql-server mysql-connector-java
	sudo chkconfig mysqld on
	sudo service mysqld start
	sudo service mysqld status
	sudo /usr/bin/mysql_secure_installation

Login to  https://www.oracle.com/technetwork/java/javase/downloads/java-archive-javase8-2177648.html

https://download.oracle.com/otn/java/jdk/8u181-b13/96a7b8442fe848ef90c96a2fad6ed6d1/jdk-8u181-linux-x64.tar.gz?AuthParam=1543824831_a9303e21c3952ba6852247e42fb7f1e2

	$ wget --no-cookies --no-check-certificate --header "Cookie: oraclelicense=accept-securebackup-cookie" http://download.oracle.com/otn/java/jdk/8u162-b12/0da788060d494f5095bf8624735fa2f1/jdk-8u162-linux-x64.tar.gz

	mkdir /usr/java/
	$ tar xzf jdk-8u191-linux-x64.tar.gz -C /usr/java/
	
	alternatives --install /usr/bin/java java /usr/java/jdk1.8.0_162/bin/java 2
	alternatives --config java
	alternatives --install /usr/bin/jar jar /usr/java/jdk1.8.0_162/bin/jar 2
	alternatives --install /usr/bin/javac javac /usr/java/jdk1.8.0_162/bin/javac 2
	alternatives --set jar /usr/java/jdk1.8.0_162/bin/jar
	alternatives --set javac /usr/java/jdk1.8.0_162/bin/javac

	export JAVA_HOME=/usr/java/jdk1.8.0_162
	export JRE_HOME=/usr/java/jdk1.8.0_162/jre
	export PATH=$PATH:/usr/java/jdk1.8.0_162/bin:/usr/java/jdk1.8.0_162/jre/bin

	wget --no-cookies \
--no-check-certificate \
--header "Cookie: oraclelicense=accept-securebackup-cookie" \

4. Create temp user in mysql -
	create user 'temp'@'%' identified by 'temp';
	grant all privileges on *.* to 'temp'@'%' with grant option;

	create database amon DEFAULT CHARACTER SET utf8;
	create user 'amon'@'%' identified by 'amon';
	grant all on amon.* TO 'amon'@'%' IDENTIFIED BY 'amon';

	create database rman DEFAULT CHARACTER SET utf8;
	create user 'rman'@'%' identified by 'rman';
	grant all on rman.* TO 'rman'@'%' IDENTIFIED BY 'rman';
	
	create database nav DEFAULT CHARACTER SET utf8;
	create user 'nav'@'%' identified by 'nav';
	grant all on nav.* TO 'nav'@'%' IDENTIFIED BY 'nav';

	create database navms DEFAULT CHARACTER SET utf8;
	create user 'navms'@'%' identified by 'navms';
	grant all on navms.* TO 'navms'@'%' IDENTIFIED BY 'navms';

	create database hive DEFAULT CHARACTER SET utf8;
	create user 'hive'@'%' identified by 'hive';
	grant all on hive.* TO 'hive'@'%' IDENTIFIED BY 'hive';	

	create database oozie DEFAULT CHARACTER SET utf8;
	create user 'oozie'@'%' identified by 'oozie';
	grant all on oozie.* TO 'oozie'@'%' IDENTIFIED BY 'oozie';	

	create database hue DEFAULT CHARACTER SET utf8;
	create user 'hue'@'%' identified by 'hue';
	grant all on hue.* TO 'hue'@'%' IDENTIFIED BY 'hue';	
	

4. Download Cloudera Manager repo and CDH parcels - 

	[fahad_khan563@hdedge ~]$ wget http://archive.cloudera.com/cm5/repo-as-tarball/5.14.2/cm5.14.2-centos7.tar.gz
	[root@hdedge fahad_khan563]# tar -xzf cm5.14.2-centos7.tar.gz -C /var/www/html/

5. Create cloudera-manager.repo file under /etc/yum.repo.d/ -
jusdrhhdmd1r1.sabic.com
	$ cd /etc/yum.repo.d/
	$ sudo vi cloudera-manager.repo
		[Cloudera Manager]
		name = Cloudera Manager
		baseurl = http://10.142.0.2/cm/5.14.2/
		gpgcheck = 0
 
	$ sudo yum clean all
	$ sudo yum makecache
	$ sudo yum list all | grep cloudera

6. Copy cloudera-manager.repo file to all others hosts under /etc/yum.repo.d/ and run following commands-
	$ sudo yum clean all
	$ sudo yum makecache
	$ sudo yum list all | grep cloudera

7. Run below command on Cloudera manager server host -
	$ sudo yum install -y cloudera-manager-agent.x86_64 cloudera-manager-daemons.x86_64 cloudera-manager-server.x86_64

7. Run below command on all worker nodes -
	$ sudo yum install -y cloudera-manager-agent.x86_64 cloudera-manager-daemons.x86_64

8. On Cloudera Manager Server Node - Add Java Home path under create user 'temp'@'%' identified by 'temp';
	grant all privileges on *.* to 'temp'@'%' with grant option;

	create database amon DEFAULT CHARACTER SET utf8;
	create user 'amon'@'%' identified by 'amon';
	grant all on amon.* TO 'amon'@'%' IDENTIFIED BY 'amon';

	create database rman DEFAULT CHARACTER SET utf8;
	create user 'rman'@'%' identified by 'rman';
	grant all on rman.* TO 'rman'@'%' IDENTIFIED BY 'rman';
	
	create database nav DEFAULT CHARACTER SET utf8;
	create user 'nav'@'%' identified by 'nav';
	grant all on nav.* TO 'nav'@'%' IDENTIFIED BY 'nav';

	create database navms DEFAULT CHARACTER SET utf8;
	create user 'navms'@'%' identified by 'navms';
	grant all on navms.* TO 'navms'@'%' IDENTIFIED BY 'navms';

	create database hive DEFAULT CHARACTER SET utf8;
	create user 'hive'@'%' identified by 'hive';
	grant all on hive.* TO 'hive'@'%' IDENTIFIED BY 'hive';	

	create database oozie DEFAULT CHARACTER SET utf8;
	create user 'oozie'@'%' identified by 'oozie';
	grant all on oozie.* TO 'oozie'@'%' IDENTIFIED BY 'oozie';	

	create database hue DEFAULT CHARACTER SET utf8;
	create user 'hue'@'%' identified by 'hue';
	grant all on hue.* TO 'hue'@'%' IDENTIFIED BY 'hue';
	export JAVA_HOME=/usr/java/jdk1.8.0_162

	export CMF_JAVA_OPTS="-Xmx2G -XX:MaxPermSize=256m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp"

11. Setup external database for Cloudera Manager -
	$ /usr/share/cmf/schema/scm_prepare_database.sh mysql -h instance-1.c.cloudera-210611.internal -utemp -ptemp --scm-host instance-1.c.cloudera-210611.internal scm scm scm

	grant all on scm.* TO 'scm'@'%' IDENTIFIED BY 'scm';

12. Edit Cloudera Manager agent file named /etc/cloudera-scm-agent/config.ini on master and workers nodes, Add Cloudera Server address.

13. Start Cloudera scm server and cloudera scm agent on all worker nodes -
	sudo service cloudera-scm-server start
	sudo chkconfig cloudera-scm-server on
	sudo service cloudera-scm-agent start
	sudo chkconfig cloudera-scm-agent on

14. Once Cloudera Manager installed, Check below folders.
[root@instance-1 ~]# ll /opt/cloudera/
total 0
drwxr-xr-x. 2 cloudera-scm cloudera-scm  6 Jul 31 09:22 csd
drwxr-xr-x  2 root         root          6 Nov 19 11:21 parcel-cache
drwxr-xr-x. 2 cloudera-scm cloudera-scm  6 Jul 31 09:22 parcel-repo
drwxr-xr-x  3 root         root         20 Nov 19 11:21 parcels

15. Download and copy parcels under /opt/cloudera/parcel-repo folder.

	wget https://archive.cloudera.com/cdh5/parcels/5.14.2/CDH-5.14.2-1.cdh5.14.2.p0.3-el7.parcel 

	sha1sum /opt/cloudera/parcel-repo/CDH-5.14.2-1.cdh5.14.2.p0.3-el7.parcel | cut -d ' ' -f 1 > /opt/cloudera/parcel-repo/CDH-5.14.2-1.cdh5.14.2.p0.3-el7.parcel.sha 

	chown cloudera-scm:cloudera-scm CDH-5.14.2-1.cdh5.14.2.p0.3-el7.parcel*
	
	service cloudera-scm-server restart



[root@linuxhelp11 named]# firewall-cmd --permanent  --add-port=53/tcp
success

[root@linuxhelp11 named]# firewall-cmd --permanent  --add-port=53/udp
success

[root@linuxhelp11 named]# firewall-cmd --reload
16. Using a Local Parcel Repository
	To use a local parcel repository, complete the following steps:

		1. Open the Cloudera Manager web UI and navigate to the Parcels page.

		2. Select Configuration and verify that you have a Local Parcel Repository path set. By default, the directory is /opt/cloudera/parcel-repo.

		3. Remove any Remote Parcel Repository URLs you are not using, including ones that point to Cloudera archives.

		4. Add the parcel you want to use to the local parcel repository directory that you specified.

		5. In the command line, navigate to the local parcel repository directory.

		6. Create a SHA1 hash for the parcel you added and save it to a file named parcel_name.parcel.sha.
			For example, the following command generates a SHA1 hash for the parcel CDH-5.10.11.cdh5.10.1.p0.10-el5:

			$ sha1sum CDH-5.10.1-1.cdh5.10.1.p0.10-el5.parcel | awk '{ print $1 }' > CDH-5.10.1-1.cdh5.10.1.p0.10-el5.parcel.sha

17. Change the ownership of the parcel and hash files to cloudera-scm:
	$ sudo chown cloudera-scm:cloudera-scm CDH*

18. Restart Cloudera Manager Server:
7.1
7.2.1
	$ sudo service cloudera-scm-server restart


/etc/ssh/sshd_config
 
  
add the following under Authentication
PermitRootLogin without-password 
 

sha1sum /opt/cloudera/parcel-repo/CDH-5.15.1-1.cdh5.15.1.p0.4-el7.parcel | cut -d ' ' -f 1 > /opt/cloudera/parcel-repo/CDH-5.15.1-1.cdh5.15.1.p0.4-el7.parcel.sha  
8. In the Cloudera Manager web UI, navigate to the Parcels page.
9. Click Check for New Parcels.
	The new parcel appears.

10. Download, distribute, and activate the parcel.

KEYTRUSTEE-5.14.0-1.KEYTRUSTEE5.14.0.p0.208446-el7.parcel
KEYTRUSTEE_SERVER-5.14.0-1.keytrustee5.14.0.p0.208456-el7.parcel